spring:
  data:
    mongodb:
      username: ${SPRING_DATA_MONGODB_USERNAME}
      password: ${SPRING_DATA_MONGODB_PORT}
      host: ${SPRING_DATA_MONGODB_HOST}
      port: ${SPRING_DATA_MONGODB_PORT}
      database: customer
      authentication-database: admin
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
      group-id: paymentGroup,orderGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.type.amapping: orderConfirmation:com.facugl.ecommerce.kafka.order.OrderConfirmation,paymentConfirmation:com.facugl.ecommerce.kafka.payment.PaymentConfirmation
  mail:
    host: ${SPRING_MAIL_HOST}
    port: ${SPRING_MAIL_PORT}
    username: facundo
    password: facundo
    properties:
      mail:
        smtp:
          truest: "*"
        auth: true
        starttls:
          enabled: true
        connectiontimeout: 5000
        timeout: 3000
        writetimeout: 5000
        
server:
  port: 8040